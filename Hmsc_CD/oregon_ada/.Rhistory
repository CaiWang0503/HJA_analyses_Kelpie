setwd("J:/UEA/Oregon/Oproject/oregon_ada")
setwd("J:/UEA/gitRepos/HJA_analyses_Kelpie/Hmsc_CD/oregon_ada")
library(Hmsc)
load(file = file.path("data", "allData.Rdata")) # S,X,Y,P & Tax (where P is based on Tax)
range(colMeans(Y.train > 0))
min(colSums(Y.train > 0))
raretaxa <- which(colSums(Y.train > 0) < 10)
length(raretaxa)
Y.train <- Y.train[, -raretaxa]
rm(raretaxa)
sum(rowSums(Y.train) == 0)
sp.prev <- colSums(Y.train)/nrow(Y.train)
hist(sp.prev)
table(cut(sp.prev, quantile(sp.prev), include.lowest = T, right = F), useNA= "always")
quantile(sp.prev)
table(cut(sp.prev, quantile(sp.prev), include.lowest = T, right = F), useNA= "always")
qGrps <- cut(sp.prev, quantile(sp.prev), include.lowest = T, right = F, labels = 1:4)
table(qGrps, useNA = "always")
length(qGrps)
Y.q4 <- Y.train[,qGrps == 4]
Y.q3 <- Y.train[,qGrps == 3]
Y.qr1 <- Y.train[,sample(seq_along(Y.train), size = sum(qGrps == 4))]
Y.qr2 <- Y.train[,sample(seq_along(Y.train), size = sum(qGrps == 3))]
mean(sp.prev[qGrps == 4])
mean(sp.prev[qGrps == 3])
quantile(sp.prev)
mean(sp.prev[qGrps == "4"])
tapply(sp.prev, qGrps, mean)
tapply(sp.prev, qGrps, median)
tapply(sp.prev, qGrps, mean)
