library(dplyr)
library(mvabund)
library(ecoCopula)
library(here)
samtoolsfilter <- "F2308" # F2308 filter only
samtoolsqual <- "q48"
minimaprundate <- 20200929
kelpierundate <- 20200927
primer <- "BF3BR2"
outputidxstatstabulatefolder <- glue::glue("outputs_minimap2_{minimaprundate}_{samtoolsfilter}_{samtoolsqual}_kelpie{kelpierundate}_{primer}_vsearch97")
otuenv <- read_csv(here("..", "..", "Kelpie_maps",
outputidxstatstabulatefolder, glue("sample_by_species_table_{samtoolsfilter}_minimap2_{minimaprundate}_kelpie{kelpierundate}_uncorr.csv")))
trap <- "M1"
here("..", "..", "Kelpie_maps",
outputidxstatstabulatefolder, glue("sample_by_species_table_{samtoolsfilter}_minimap2_{minimaprundate}_kelpie{kelpierundate}_uncorr.csv")))
here("..", "..", "Kelpie_maps",
outputidxstatstabulatefolder, glue("sample_by_species_table_{samtoolsfilter}_minimap2_{minimaprundate}_kelpie{kelpierundate}_uncorr.csv"))
library(glue)
here("..", "..", "Kelpie_maps",
outputidxstatstabulatefolder, glue("sample_by_species_table_{samtoolsfilter}_minimap2_{minimaprundate}_kelpie{kelpierundate}_uncorr.csv"))
here("Kelpie_maps",
outputidxstatstabulatefolder, glue("sample_by_species_table_{samtoolsfilter}_minimap2_{minimaprundate}_kelpie{kelpierundate}_uncorr.csv"))
otuenv <- read.csv(here("Kelpie_maps",
outputidxstatstabulatefolder, glue("sample_by_species_table_{samtoolsfilter}_minimap2_{minimaprundate}_kelpie{kelpierundate}_uncorr.csv")))
trap <- "M1"
period <- "S1"
otuenv <- otuenv %>%
filter(trap == trap[[1]] & period == period[[1]])
XY.csv <- otuenv %>%
select(UTM_E, UTM_N) %>%
#scale() %>%  # keep orignal for plotting
as_tibble()
minocc <- 5 # set to high number (e.g. 20) for testing
otu.ab.csv <- otuenv %>% select(contains("__"))
otu.ab.csv <- otu.ab.csv[ , specnumber(otu.ab.csv, MARGIN = 2) >= minocc]
library(vegan)
otu.ab.csv <- otu.ab.csv[ , specnumber(otu.ab.csv, MARGIN = 2) >= minocc]
otu.qp.csv <- otu.ab.csv %>%
mutate(across(contains("__"),
~ .x /(otuenv$COISpike_sum*otuenv$lysis_ratio))) %>%
mutate(across(contains("__"), ~ log(.x + 0.001))) %>%
mutate(across(contains("__"), ~ rescale(.x))) # {scales}
otu.qp.csv <- otu.ab.csv %>%
mutate(across(contains("__"),
~ .x /(otuenv$COISpike_sum*otuenv$lysis_ratio))) %>%
mutate(across(contains("__"), ~ log(.x + 0.001))) %>%
mutate(across(contains("__"), ~ scales::rescale(.x))) # {scales}
max(otu.qp.csv) == 1 # should be TRUE
otu.qp.csv[1:10, 1:10]
otu.qp.csv[1:10, 1:5]
otu.pa.csv <- otu.ab.csv
otu.pa.csv[otu.pa.csv > 0] <- 1
min(colSums(otu.pa.csv)) == minocc # should be TRUE
otuenv %>%
select(!contains("__"), -UTM_E, -UTM_N, -starts_with("nor")) %>%
names(.)
env.csv <- otuenv %>%
select(!contains("__"), -UTM_E, -UTM_N, -starts_with("nor")) %>%
mutate(B1_mean = rowMeans(across(starts_with("B1_")))) %>%
mutate(B4_mean = rowMeans(across(starts_with("B4_")))) %>%
mutate(lg_DistStream = log(distToStream_m + 0.001)) %>%
mutate(lg_DistRoad = log(distToRoad_m + 0.001)) %>%
mutate(lg_YrsDisturb = log(YrsSinceDist + 0.001)) %>%
mutate(lg_cover2m_max = log(l_Cover_2m_max + 0.001)) %>%
mutate(lg_cover2m_4m = log(l_Cover_2m_4m + 0.001)) %>%
mutate(lg_cover4m_16m = log(l_Cover_4m_16m + 0.001)) %>%
select(SiteName, trap, period, lysis_ratio, COISpike_sum, clearcut, insideHJA, oldGrowthIndex, elevation_m, canopyHeight_m, precipitation_mm, mean.NDVI, mean.EVI, mean.green, mean.wet, l_p25, l_rumple, B1_mean, B4_mean, lg_DistStream, lg_DistRoad, lg_YrsDisturb, lg_cover2m_max, lg_cover2m_4m, lg_cover4m_16m) %>%
mutate(across(where(is.numeric) & !lysis_ratio & !COISpike_sum, scale)) %>%
mutate(offset = (1/COISpike_sum * lysis_ratio)) %>%
relocate(offset, .after = COISpike_sum)
abund <- "pa"
glue("otu.{abund}.csv")
otu.ord <- mvabund(get(glue("otu.{abund}.csv")))
is.mvabund(otu.ord)
glue("otu.{abund}.csv")
otu.mod0 <- manyglm(otu.ord ~ 1,
family = binomial("cloglog"), # family = "binomial"
data = env.csv
)
plot(otu.mod0) # chk residuals
otu.mod0.ord <- cord(otu.mod0)
source('J:/UEA/gitRepos/HJA_analyses_Kelpie/Hmsc_CD/local/ecoCopula_plot_fn.r', echo=TRUE)
str(otu.ord)
otu.mod0 <- manyglm(otu.ord ~ 1, family = binomial("cloglog")) # family = "binomial"
plot(otu.mod0) # chk residuals
otu.mod0.ord <- cord(otu.mod0)
site_res <- data.frame(otu.mod0.ord$scores, otuenv, env.csv, XY.csv)
head(site_res)
str(site_res)
str(env.csv)
str(otu.mod0.ord)
site_res <- data.frame(otu.mod0.ord$scores, env.csv, XY.csv)
str(otu.mod0.ord, max.level = 1)
str(site_res, max.level=1)
sp_res <- data.frame(otu.mod0.ord$loadings, species = colnames(otu.ord))
str(sp_res)
model <- "otu.ord ~ elevation_m"
p0 <- plot_factors(alphanum = 4,
abund = abund,
model = model)
p1 <- plot_xy_factor1(abund = abund, model = model)
p2 <- plot_xy_factor2(abund = abund, model = model)
p0
p1 | p2 # if "Viewport has zero dimension(s)" error, enlarge plot window
p1
p2 # if "Viewport has zero dimension(s)" error, enlarge plot window
plot_corrplot(abund = abund, model = model)
plot_corrplot <- function(abund, model) {
site_res_num <- site_res %>%
select(-SiteName, -trap, -period, -lysis_ratio, -COISpike_sum,
-clearcut, -insideHJA)
# save corrplot
pdf(file = here("Kelpie_maps",
outputidxstatstabulatefolder,
glue("corrplot_{trap}{period}_minimap2_{minimaprundate}_kelpie{kelpierundate}_{abund}.pdf")
),
width = 11.7,
height = 8.3
)
corrplot(cor(site_res_num),
method = "ellipse",
type = "lower",
title = glue("{abund}, {model}"),
mar=c(0,0,2,0)
)
dev.off()
}
plot_corrplot(abund = abund, model = model)
plot_corrplot <- function(abund, model) {
site_res_num <- site_res %>%
select(-SiteName, -trap, -period, -lysis_ratio, -COISpike_sum,
-clearcut, -insideHJA)
# save corrplot
pdf(file <- here("Kelpie_maps",
outputidxstatstabulatefolder,
glue("corrplot_{trap}{period}_minimap2_{minimaprundate}_kelpie{kelpierundate}_{abund}.pdf")
),
width = 11.7,
height = 8.3
)
corrplot(cor(site_res_num),
method = "ellipse",
type = "lower",
title = glue("{abund}, {model}"),
mar=c(0,0,2,0)
)
dev.off()
print(file); rm(file)
}
plot_corrplot(abund = abund, model = model)
here()
here("Hmsc_CD/local/",
glue("corrplot_{trap}{period}_minimap2_{minimaprundate}_kelpie{kelpierundate}_{abund}.pdf"))
here("Hmsc_CD/local",
glue("corrplot_{trap}{period}_minimap2_{minimaprundate}_kelpie{kelpierundate}_{abund}.pdf"))
plot_corrplot <- function(abund, model) {
site_res_num <- site_res %>%
select(-SiteName, -trap, -period, -lysis_ratio, -COISpike_sum,
-clearcut, -insideHJA)
# save corrplot
pdf(file <- here("Hmsc_CD/local",
glue("corrplot_{trap}{period}_minimap2_{minimaprundate}_kelpie{kelpierundate}_{abund}.pdf")),
width = 11.7,
height = 8.3
)
corrplot(cor(site_res_num),
method = "ellipse",
type = "lower",
title = glue("{abund}, {model}"),
mar=c(0,0,2,0)
)
dev.off()
print(file); rm(file)
}
plot_corrplot(abund = abund, model = model)
p0
p1
otu.mod2 <- manyglm(otu.ord ~ elevation_m * oldGrowthIndex + ,
family = binomial("cloglog"), # family = "binomial"
data = env.csv)
otu.mod2 <- manyglm(otu.ord ~ elevation_m * oldGrowthIndex,
family = binomial("cloglog"), # family = "binomial"
data = env.csv)
otu.mod2.ord <- cord(otu.mod2)
otu.mod2 <- manyglm(otu.ord ~ elevation_m * oldGrowthIndex + offset(log(offset)),
family = binomial("cloglog"), # family = "binomial"
data = env.csv)
otu.mod3 <- manyglm(otu.ord ~ elevation_m + insideHJA + lg_YrsDisturb + offset(log(offset)),
family = binomial("cloglog"), # family = "binomial"
data = env.csv)
otu.mod2 <- manyglm(otu.ord ~ elevation_m * oldGrowthIndex + offset(log(offset)),
family = binomial("cloglog"), # family = "binomial"
data = env.csv)
otu.mod2 <- manyglm(otu.ord ~ elevation_m + insideHJA + lg_YrsDisturb + offset(log(offset)),
family = binomial("cloglog"), # family = "binomial"
data = env.csv)
otu.mod3 <- manyglm(otu.ord ~ elevation_m * oldGrowthIndex + offset(log(offset)),
family = binomial("cloglog"), # family = "binomial"
data = env.csv)
otu.mod2.ord <- cord(otu.mod2)
otu.mod3.ord <- cord(otu.mod3)
plot_factors <- function(alphanum, abund, model, spData, siteData) {
alpha <- alphanum
ggplot() +
geom_segment(aes(x = 0, y = 0,
xend = Factor1 * alpha * 0.95,
yend = Factor2 * alpha * 0.95),
data = spData,
size = .1) +
geom_point(aes(x = Factor1, y = Factor2,
color = elevation_m,
size = exp(lg_YrsDisturb),
shape = as.factor(insideHJA)
),
data = site_res) +
geom_text_repel(aes(x = Factor1, y = Factor2,
label = env.csv$SiteName),
data = siteData,
size = 2) +
# geom_label_repel(aes(x = Factor1 * alpha, y = Factor2 * alpha, label = species), data = sp_res, size = 2.5) +
scale_color_gradientn(colours = brewer.pal(n = 10, name = "RdYlBu")) +
theme_classic() + # or "PuOr" or "RdYlBu"
labs(title = glue("HJA, ecoCopula ordination, {abund}"),
subtitle = model) +
xlab("Factor 1") +
ylab("Factor 2")
}
source('J:/UEA/gitRepos/HJA_analyses_Kelpie/Hmsc_CD/local/ecoCopula_plot_fn.r', echo=TRUE)
site_res2 <- data.frame(otu.mod2.ord$scores, env.csv, XY.csv)
sp_res2 <- data.frame(otu.mod2.ord$loadings, species = colnames(otu.ord))
site_res3 <- data.frame(otu.mod3.ord$scores, env.csv, XY.csv)
sp_res3 <- data.frame(otu.mod3.ord$loadings, species = colnames(otu.ord))
p0 <- plot_factors(alphanum = 4,
abund = abund,
model = model, spData = sp_res2, siteData = site_res2)
p0
plot_factors <- function(alphanum, abund, model, spData, siteData) {
alpha <- alphanum
ggplot() +
geom_segment(aes(x = 0, y = 0,
xend = Factor1 * alpha * 0.95,
yend = Factor2 * alpha * 0.95),
data = spData,
size = .1) +
geom_point(aes(x = Factor1, y = Factor2,
color = elevation_m,
size = exp(lg_YrsDisturb),
shape = as.factor(insideHJA)), data = siteData) +
# geom_text_repel(aes(x = Factor1, y = Factor2,
#                     label = env.csv$SiteName),
#                 data = siteData,
#                 size = 2) +
# geom_label_repel(aes(x = Factor1 * alpha, y = Factor2 * alpha, label = species), data = sp_res, size = 2.5) +
scale_color_gradientn(colours = brewer.pal(n = 10, name = "RdYlBu")) +
theme_classic() + # or "PuOr" or "RdYlBu"
labs(title = glue("HJA, ecoCopula ordination, {abund}"),
subtitle = model) +
xlab("Factor 1") +
ylab("Factor 2")
}
p0 <- plot_factors(alphanum = 4,
abund = abund,
model = model, spData = sp_res2, siteData = site_res2)
p0
p1 <- plot_xy_factor1(abund = abund, model = model)
p1
p1 <- plot_xy_factor1(abund = abund, model = model, siteData = site_res2)
p1
p0 <- plot_factors(alphanum = 4,
abund = abund,
model = model, spData = sp_res2, siteData = site_res2)
p0
str(site_res, max.level=1)
str(sp_res)
p0 <- plot_factors(alphanum = 4,
abund = abund,
model = model, spData = sp_res3, siteData = site_res3)
p0
p1 <- plot_xy_factor1(abund = abund, model = model, siteData = site_res3)
p1
otu.mod0 <- manyglm(otu.ord ~ 1 + offset(log(offset)),
family = binomial("cloglog")) # family = "binomial"
otu.mod0 <- manyglm(otu.ord ~ 1 + offset(log(offset)),
family = binomial("cloglog"),
data = env.csv) # family = "binomial"
plot(otu.mod0) # chk residuals
otu.mod1 <- manyglm(otu.ord ~ elevation_m + offset(log(offset)),
family = binomial("cloglog"), # family = "binomial"
data = env.csv)
plot(otu.mod1) # chk residuals
otu.mod0 <- manyglm(otu.ord ~ 1 + offset(log(offset)),
family = "negative.binomial",
data = env.csv)
plot(otu.mod0) # chk residuals
otu.mod0.ord <- cord(otu.mod0)
otu.mod1 <- manyglm(otu.ord ~ elevation_m + offset(log(offset)),
family = "negative.binomial", # family = "binomial"
data = env.csv)
plot(otu.mod1) # chk residuals
otu.mod2 <- manyglm(otu.ord ~ elevation_m + insideHJA + lg_YrsDisturb + offset(log(offset)),
family = "negative.binomial", # family = "binomial"
data = env.csv)
anova(otu.mod2, nBoot = 100)
otu.mod1.ord <- cord(otu.mod1)
otu.mod2.ord <- cord(otu.mod2)
otu.mod3 <- manyglm(otu.ord ~ elevation_m * oldGrowthIndex + offset(log(offset)),
family = "negative.binomial", # family = "binomial"
data = env.csv)
otu.mod3.ord <- cord(otu.mod3)
p0 <- plot_factors(alphanum = 4,
abund = abund,
model = model, spData = sp_res3, siteData = site_res3)
p0
p0 <- plot_factors(alphanum = 1,
abund = abund,
model = model, spData = sp_res3, siteData = site_res3)
p0 <- plot_factors(alphanum = 1,
abund = abund,
model = model, spData = sp_res3, siteData = site_res)
p0 <- plot_factors(alphanum = 1,
abund = abund,
model = model, spData = sp_res3, siteData = site_res)
p0
p0 <- plot_factors(alphanum = 2,
abund = abund,
model = model, spData = sp_res3, siteData = site_res)
p0
p0 <- plot_factors(alphanum = 2,
abund = abund,
model = model, spData = sp_res3, siteData = site_res2)
p0
p0 <- plot_factors(alphanum = 2,
abund = abund,
model = model, spData = sp_res3, siteData = site_res)
p0
otu.mod2 <- manyglm(otu.ord ~ elevation_m + insideHJA + lg_YrsDisturb + offset(log(offset)),
family = "negative.binomial", # family = "binomial"
data = env.csv,
show.time = "all")
otu.mod2.ord <- cord(otu.mod2)
site_res2 <- data.frame(otu.mod2.ord$scores, env.csv, XY.csv)
sp_res2 <- data.frame(otu.mod2.ord$loadings, species = colnames(otu.ord))
alpha <- 4*0.95
ggplot() +
geom_segment(aes(x = 0, y = 0,
xend = Factor1 * alpha,
yend = Factor2 * alpha),
data = sp_res2,
size = .1) +
geom_point(aes(x = Factor1, y = Factor2,
color = elevation_m,
size = exp(lg_YrsDisturb),
shape = as.factor(insideHJA)),
data = site_res2) +
geom_text_repel(aes(x = Factor1, y = Factor2,
label = env.csv$SiteName),
data = site_res2,
size = 2) +
scale_color_gradientn(colours = brewer.pal(n = 10, name = "RdYlBu")) +
theme_classic() + # or "PuOr" or "RdYlBu"
labs(title = model) +
xlab("Factor 1") +
ylab("Factor 2")
p0 <- plot_factors(alphanum = 4,
abund = abund,
model = model, spData = sp_res2, siteData = site_res2)
p0
ggplot() +
geom_segment(aes(x = 0, y = 0,
xend = Factor1 * alpha,
yend = Factor2 * alpha),
data = sp_res2,
size = .1) +
geom_point(aes(x = Factor1, y = Factor2,
color = elevation_m,
size = exp(lg_YrsDisturb),
shape = as.factor(insideHJA)),
data = site_res2) +
geom_text_repel(aes(x = Factor1, y = Factor2,
label = env.csv$SiteName),
data = site_res2,
size = 2) +
scale_color_gradientn(colours = brewer.pal(n = 10, name = "RdYlBu")) +
theme_classic() + # or "PuOr" or "RdYlBu"
labs(title = "3 pred") +
xlab("Factor 1") +
ylab("Factor 2")
ggplot() +
geom_segment(aes(x = 0, y = 0,
xend = Factor1 * alpha,
yend = Factor2 * alpha),
data = sp_res2,
size = .1) +
geom_point(aes(x = Factor1, y = Factor2,
color = elevation_m,
size = exp(lg_YrsDisturb),
shape = as.factor(insideHJA)),
data = site_res2) +
scale_color_gradientn(colours = brewer.pal(n = 10, name = "RdYlBu")) +
theme_classic() + # or "PuOr" or "RdYlBu"
labs(title = "3 pred") +
xlab("Factor 1") +
ylab("Factor 2")
otu.mod2b <- manyglm(otu.ord ~ elevation_m + insideHJA + lg_YrsDisturb + offset(log(offset)),
family = "negative.binomial", # family = "binomial"
data = env.csv)
otu.mod2a.ord <- cord(otu.mod2a)
otu.mod2b.ord <- cord(otu.mod2b)
site_res2a <- data.frame(otu.mod2a.ord$scores, env.csv, XY.csv)
sp_res2a <- data.frame(otu.mod2a.ord$loadings, species = colnames(otu.ord))
site_res2b <- data.frame(otu.mod2b.ord$scores, env.csv, XY.csv)
sp_res2b <- data.frame(otu.mod2b.ord$loadings, species = colnames(otu.ord))
ggplot() +
geom_segment(aes(x = 0, y = 0,
xend = Factor1 * alpha,
yend = Factor2 * alpha),
data = sp_res2a,
size = .1) +
geom_point(aes(x = Factor1, y = Factor2,
color = elevation_m,
size = exp(lg_YrsDisturb),
shape = as.factor(insideHJA)),
data = site_res2a) +
scale_color_gradientn(colours = brewer.pal(n = 10, name = "RdYlBu")) +
theme_classic() + # or "PuOr" or "RdYlBu"
labs(title = "3 pred") +
xlab("Factor 1") +
ylab("Factor 2")
ggplot() +
geom_segment(aes(x = 0, y = 0,
xend = Factor1 * alpha,
yend = Factor2 * alpha),
data = sp_res2b,
size = .1) +
geom_point(aes(x = Factor1, y = Factor2,
color = elevation_m,
size = exp(lg_YrsDisturb),
shape = as.factor(insideHJA)),
data = site_res2b) +
scale_color_gradientn(colours = brewer.pal(n = 10, name = "RdYlBu")) +
theme_classic() + # or "PuOr" or "RdYlBu"
labs(title = "3 pred b") +
xlab("Factor 1") +
ylab("Factor 2")
otu.mod2c <- manyglm(otu.ord ~ elevation_m + insideHJA + lg_YrsDisturb + offset(log(offset)),
family = binomial("cloglog"), # family = "binomial"
data = env.csv)
otu.mod2c.ord <- cord(otu.mod2c)
str(otu.mod1.ord, max.level =1)
cor(otu.mod1.ord$scores, env.csv)
str(otu.csv)
str(env.csv)
num.pred <- sapply(env.csv, is.numeric)
cor(otu.mod1.ord$scores, env.csv[,num.pred])
site_res2c <- data.frame(otu.mod2c.ord$scores, env.csv, XY.csv)
sp_res2c <- data.frame(otu.mod2c.ord$loadings, species = colnames(otu.ord))
ggplot() +
geom_segment(aes(x = 0, y = 0,
xend = Factor1 * alpha,
yend = Factor2 * alpha),
data = sp_res2c,
size = .1) +
geom_point(aes(x = Factor1, y = Factor2,
color = elevation_m,
size = exp(lg_YrsDisturb),
shape = as.factor(insideHJA)),
data = site_res2c) +
scale_color_gradientn(colours = brewer.pal(n = 10, name = "RdYlBu")) +
theme_classic() + # or "PuOr" or "RdYlBu"
labs(title = "3 pred b") +
xlab("Factor 1") +
ylab("Factor 2")
glue("otu.{abund}.csv")
otu.pa <- mvabund(otu.pa.csv)
out.qp <- mvabund(otu.qp.csv)
is.mvabund(otu.pa)
is.mvabund(otu.qp)
out.qp <- mvabund(otu.qp.csv)
is.mvabund(otu.pa)
is.mvabund(otu.qp)
otu.qp <- mvabund(otu.qp.csv)
rm(out.qp)
is.mvabund(otu.qp)
str(otu.ord)
mod0.pa <- manyglm(otu.pa ~ 1 + offset(log(offset)),
family = "negative.binomial", # family = binomial("cloglog")
data = env.csv)
