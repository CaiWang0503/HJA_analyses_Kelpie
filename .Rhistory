label_size = 12,
align = "v"
)
plot_grid(
p1, NULL, p2, NULL, p3,
ncol = 2,
byrow = TRUE
)
plot_grid(
p1, p5,
align = "h", axis = "tb",
nrow = 1, rel_widths = c(1, 2)
)
p6 <- plot_grid(p1,p2)
p6
plot_grid(p6, p1)
plot_grid(p6, p1, nrow = 2)
library(ggplot2)
library(cowplot)
p4 <- plot_grid(p2, p3)
m1 <- plot_grid(p1, p4, nrow = 2)
ggsave("Hmsc_CD/local/plots/mod1.png", m1, width = 200, height = 300, units = "mm")
p1 <- plot_factors(alpha, "pa", modName, sp_res, site_res)
p2 <- plot_xy_factor1("pa", modName, site_res)
p3 <- plot_xy_factor2("pa", modName, site_res)
p4 <- plot_grid(p2, p3)
m1 <- plot_grid(p1, p4, nrow = 2)
ggsave("Hmsc_CD/local/plots/mod1.png", m1, width = 200, height = 300, units = "mm")
ggsave("Hmsc_CD/local/plots/mod1.png", m1, width = 300, height = 250, units = "mm")
m1 <- plot_grid(p1, p4, nrow = 2, rel_heights = c(2,3))
ggsave("Hmsc_CD/local/plots/mod1.png", m1, width = 300, height = 250, units = "mm")
m1 <- plot_grid(p1, p4, nrow = 2, rel_heights = c(3,2))
ggsave("Hmsc_CD/local/plots/mod1.png", m1, width = 300, height = 250, units = "mm")
title <- ggdraw() +
draw_label(modName,
fontface = 'bold',
x = 0,
hjust = 0
) +
theme(
# add margin on the left of the drawing canvas,
# so title is aligned with left edge of first plot
plot.margin = margin(0, 0, 0, 7)
)
m1 <- plot_grid(title, p1, p4, nrow = 3, rel_heights = c(1,5,4))
ggsave("Hmsc_CD/local/plots/mod1.png", m1, width = 300, height = 250, units = "mm")
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 2,x = 0, hjust = 0.5
)
m1 <- plot_grid(title, p1, p4, nrow = 3, rel_heights = c(1,5,4))
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 2,x = 0.5, y = 0.5, hjust = 0)
m1 <- plot_grid(title, p1, p4, nrow = 3, rel_heights = c(1,5,4))
draw_label(modName, fontface = 'bold', size = 5,x = 0.5, y = 0.5, hjust = 0)
m1 <- plot_grid(title, p1, p4, nrow = 3, rel_heights = c(1,5,4))
ggsave("Hmsc_CD/local/plots/mod1.png", m1, width = 300, height = 250, units = "mm")
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 5,x = 0.5, y = 0.5, hjust = 0)
m1 <- plot_grid(title, p1, p4, nrow = 3, rel_heights = c(1,5,4))
ggsave("Hmsc_CD/local/plots/mod1.png", m1, width = 300, height = 250, units = "mm")
p1 <- plot_factors(alpha, "pa", "", sp_res, site_res)
p2 <- plot_xy_factor1("pa", "", site_res)
p3 <- plot_xy_factor2("pa", "", site_res)
p4 <- plot_grid(p2, p3)
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 16, x = 0.5, y = 0.5, hjust = 0)
m1 <- plot_grid(title, p1, p4, nrow = 3, rel_heights = c(1,5,4))
ggsave("Hmsc_CD/local/plots/mod1.png", m1, width = 300, height = 250, units = "mm")
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 16, x = 0.2, y = 0.5, hjust = 0)
m1 <- plot_grid(title, p1, p4, nrow = 3, rel_heights = c(1,5,4))
ggsave("Hmsc_CD/local/plots/mod1.png", m1, width = 300, height = 250, units = "mm")
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 18, x = 0.3, y = 0.5, hjust = 0)
m1 <- plot_grid(title, p1, p4, nrow = 3, rel_heights = c(1,5,4))
ggsave("Hmsc_CD/local/plots/mod1.png", m1, width = 300, height = 250, units = "mm")
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
for(i in seq_along(modList)){
mod <- modList[[i]]$mod
mod.ord <- modList[[i]]$ord
sp_res <- modList[[i]]$sp
site_res <- modList[[i]]$site
# chk residuals
# plot(mod)
modName <- paste0("predictors: ", as.character(fm[[i]])[3])
#plot factors
p1 <- plot_factors(alpha, "pa", "", sp_res, site_res)
# Plot over coords with factors as colour fill
p2 <- plot_xy_factor1("pa", "", site_res)
p3 <- plot_xy_factor2("pa", "", site_res)
p4 <- plot_grid(p2, p3)
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 18, x = 0.3, y = 0.5, hjust = 0)
m1 <- plot_grid(title, p1, p4, nrow = 3, rel_heights = c(1,4,5))
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
}
p5 <- ~t_corrplot(mod.cor, "mod1")
mod.cor <- cor(mod.ord$scores, site_res[,cor.preds])
p2 <- ~t_corrplot(mod.cor, "mod1")
p2
pA <- plot_grid(p1, p2)
pA
pA <- plot_grid(p1, p2, rel_widths = c(2,1))
pB <- plot_grid(p3, p4)
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 18, x = 0.3, y = 0.5, hjust = 0)
m1 <- plot_grid(title, pA, pB, nrow = 3, rel_heights = c(1,4,5))
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
pA <- plot_grid(p1, p2, rel_widths = c(2,1))
pA
p3 <- plot_xy_factor1("pa", "", site_res)
p4 <- plot_xy_factor2("pa", "", site_res)
pB <- plot_grid(p3, p4)
pB
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 18, x = 0.3, y = 0.5, hjust = 0)
m1 <- plot_grid(title, pA, pB, nrow = 3, rel_heights = c(1,4,5))
m1
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
i = 1
mod <- modList[[i]]$mod
mod.ord <- modList[[i]]$ord
sp_res <- modList[[i]]$sp
site_res <- modList[[i]]$site
# chk residuals
# plot(mod)
modName <- paste0("predictors: ", as.character(fm[[i]])[3])
#plot factors
p1 <- plot_factors(alpha, "pa", "", sp_res, site_res)
mod.cor <- cor(mod.ord$scores, site_res[,cor.preds])
p2 <- ~t_corrplot(mod.cor, "corplot")
p3 <- plot_xy_factor1("pa", "", site_res)
p4 <- plot_xy_factor2("pa", "", site_res)
# put rows together
pA <- plot_grid(p1, p2, rel_widths = c(2,1))
pB <- plot_grid(p3, p4)
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 18, x = 0.3, y = 0.5, hjust = 0)
m1 <- plot_grid(title, pA, pB, nrow = 3, rel_heights = c(1,4,5))
# m1
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
pA <- plot_grid(p1, p2, rel_widths = c(3,2))
m1 <- plot_grid(title, pA, pB, nrow = 3, rel_heights = c(1,4,5))
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
p2 <- ~t_corrplot(mod.cor, "")
p3 <- plot_xy_factor1("pa", "", site_res)
p4 <- plot_xy_factor2("pa", "", site_res)
pA <- plot_grid(p1, p2, rel_widths = c(3,2))
pA
pB <- plot_grid(p3, p4)
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 18, x = 0.3, y = 0.5, hjust = 0)
m1 <- plot_grid(title, pA, pB, nrow = 3, rel_heights = c(1,4,5))
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
pA <- plot_grid(p1, p2, rel_widths = c(3,2), align = "h")
pA
pA <- plot_grid(p1, p2, rel_widths = c(3,2), align = "h", axis = "t")
pA
m1 <- plot_grid(title, pA, pB, nrow = 3, rel_heights = c(1,4,5))
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
m1 <- plot_grid(pA, pB, nrow = 3, rel_heights = c(1,4,5))
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
m1 <- plot_grid(pA, pB, nrow = 2, rel_heights = c(4,5))
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
pA <- plot_grid(p1, p2, rel_widths = c(5,4), align = "h", axis = "t")
pB <- plot_grid(p3, p4)
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 18, x = 0.3, y = 0.5, hjust = 0)
m1 <- plot_grid(title, pA, pB, nrow = 3, rel_heights = c(1,4,5))
m1 <- plot_grid(pA, pB, nrow = 2, rel_heights = c(4,5))
# m1
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
pA
t_corrplot <- function(mod.cor, title){
corrplot(t(mod.cor),
is.corr = F,
method = "ellipse",
cl.pos = "n",
cl.lim = c(-1,1),
title = title,
oma = c(0,0,0,0),
#oma = c(2,2,5,1),
mar = c(0,0,0,0))
}
p2 <- ~t_corrplot(mod.cor, "")
p3 <- plot_xy_factor1("pa", "", site_res)
p4 <- plot_xy_factor2("pa", "", site_res)
# put rows together
pA <- plot_grid(p1, p2, rel_widths = c(5,4), align = "h", axis = "t")
pB <- plot_grid(p3, p4)
pA
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 18, x = 0.3, y = 0.5, hjust = 0)
m1 <- plot_grid(title, pA, pB, nrow = 3, rel_heights = c(1,4,5))
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
pA <- plot_grid(p2, p1, rel_widths = c(4,5), align = "h", axis = "t")
pB <- plot_grid(p3, p4)
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 18, x = 0.3, y = 0.5, hjust = 0)
m1 <- plot_grid(title, pA, pB, nrow = 3, rel_heights = c(1,4,5))
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
t_corrplot <- function(mod.cor, title){
corrplot(t(mod.cor),
is.corr = F,
method = "ellipse",
cl.pos = "n",
cl.lim = c(-1,1),
title = title,
oma = c(0,0,0,0),
#oma = c(2,2,5,1),
mar = c(0,0,1,0))
}
p2 <- ~t_corrplot(mod.cor, "")
p3 <- plot_xy_factor1("pa", "", site_res)
p4 <- plot_xy_factor2("pa", "", site_res)
# put rows together
pA <- plot_grid(p2, p1, rel_widths = c(4,5), align = "h", axis = "t")
pB <- plot_grid(p3, p4)
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 18, x = 0.3, y = 0.5, hjust = 0)
m1 <- plot_grid(title, pA, pB, nrow = 3, rel_heights = c(1,4,5))
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
m1 <- plot_grid(pA, pB, title, nrow = 3, rel_heights = c(4,5,1))
}
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
p2 <- ~t_corrplot(mod.cor, "")
# Plot over coords with factors as colour fill
p3 <- plot_xy_factor1("pa", "", site_res)
p4 <- plot_xy_factor2("pa", "", site_res)
# put rows together
pA <- plot_grid(p2, p1, rel_widths = c(4,5), align = "h", axis = "t")
pB <- plot_grid(p3, p4)
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 18, x = 0.3, y = 0.5, hjust = 0)
m1 <- plot_grid(pA, pB, title, nrow = 3, rel_heights = c(4,5,1))
# m1 <- plot_grid(pA, pB, nrow = 2, rel_heights = c(4,5))
# m1
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
for(i in seq_along(modList)){
mod <- modList[[i]]$mod
mod.ord <- modList[[i]]$ord
sp_res <- modList[[i]]$sp
site_res <- modList[[i]]$site
# chk residuals
# plot(mod)
modName <- paste0("predictors: ", as.character(fm[[i]])[3])
#plot factors
p1 <- plot_factors(alpha, "pa", "", sp_res, site_res)
## correlation plot
mod.cor <- cor(mod.ord$scores, site_res[,cor.preds])
p2 <- ~t_corrplot(mod.cor, "")
# Plot over coords with factors as colour fill
p3 <- plot_xy_factor1("pa", "", site_res)
p4 <- plot_xy_factor2("pa", "", site_res)
# put rows together
pA <- plot_grid(p2, p1, rel_widths = c(4,5), align = "h", axis = "t")
pB <- plot_grid(p3, p4)
title <- ggdraw() +
draw_label(modName, fontface = 'bold', size = 18, x = 0.3, y = 0.5, hjust = 0)
m1 <- plot_grid(pA, pB, title, nrow = 3, rel_heights = c(4,5,1))
# m1 <- plot_grid(pA, pB, nrow = 2, rel_heights = c(4,5))
# m1
ggsave(paste0("Hmsc_CD/local/plots/mod", i, ".png"), m1, width = 300, height = 250, units = "mm")
}
source('J:/UEA/gitHRepos/HJA_analyses_Kelpie/Hmsc_CD/local/p1_species_richness_plots.r', echo=TRUE)
png("Hmsc_CD/local/plots/spRich_histograms.png", width = 200, height = 200, units= "mm", res = 200)
par(mfrow = c(2,2))
for(i in qs) hist(rowSums(otu.pa.csv[, qGrps == i]), main = paste("quantile",i), xlab = "Sp richness")
dev.off()
# scatter plot of lowest prevalence species against all other quantiles
png("Hmsc_CD/local/plots/spRich_correlations.png", width = 200, height = 200, units= "mm", res = 200)
par(mfrow = c(2,2))
for(i in qs) plot(rowSums(otu.pa.csv[, qGrps == i]),rowSums(otu.pa.csv[, qGrps == qs[1]]),
ylab = "sp rich quantile 1", xlab = paste("sp rich quantile",i))
dev.off()
# correlation test
for(i in qs) print(cor.test(rowSums(otu.pa.csv[, qGrps == i]),rowSums(otu.pa.csv[, qGrps == qs[1]]), method = "spearman"))
png("Hmsc_CD/local/plots/spRich_correlations.png", width = 200, height = 200, units= "mm", res = 200)
par(mfrow = c(2,2))
for(i in qs) plot(rowSums(otu.pa.csv[, qGrps == i]),rowSums(otu.pa.csv[, qGrps == qs[1]]),
ylab = "sp rich quantile 1", xlab = paste("sp rich quantile",i), pch = 16)
dev.off()
library(sf)
library(raster)
terr <- raster("J:/UEA/Oregon/gis/r_nad/terrain.tif")
terr
terr <- brick("J:/UEA/Oregon/gis/r_nad/terrain.tif")
terr
names(terr) <- c("dem", "tri")
plot(terr)
wd <- here::here()
wd
setwd(wd)
dir()
library(sf)
library(raster)
source("Hmsc_CD/local/L1_read_data.r")
library(dplyr)
# library(here) # not on ADA
library(glue)
samtoolsfilter <- "F2308" # F2308 filter only
samtoolsqual <- "q48"
minimaprundate <- 20200929
kelpierundate <- 20200927
primer <- "BF3BR2"
gitHub <- "https://raw.githubusercontent.com/dougwyu/HJA_analyses_Kelpie/master/Kelpie_maps"
outputidxstatstabulatefolder <- glue::glue("outputs_minimap2_{minimaprundate}_{samtoolsfilter}_{samtoolsqual}_kelpie{kelpierundate}_{primer}_vsearch97")
datFile <- glue("sample_by_species_table_{samtoolsfilter}_minimap2_{minimaprundate}_kelpie{kelpierundate}_uncorr.csv")
otuenv <- read.csv(file.path(gitHub, outputidxstatstabulatefolder, datFile))
# M1S1
trap <- "M1"
period <- "S1"
otuenv <- otuenv %>%
dplyr::filter(trap == trap[[1]] & period == period[[1]])
# bring in DEM stats
load("Hmsc_CD/oregon_ada/data/demStats.rdata") # temporary location for moment...
# keep OTUs with >=5 incidences
# original read number abundance
minocc <- 5 # set to high number (e.g. 20) for testing
otu.ab.csv <- otuenv %>% dplyr::select(contains("__"))
otu.ab.csv <- otu.ab.csv[ , colSums(otu.ab.csv > 0) >= minocc]
# log(FSL) correction and scale to quasiprobability
otu.qp.csv <- otu.ab.csv %>%
mutate(across(contains("__"),
~ .x /(otuenv$COISpike_sum*otuenv$lysis_ratio))) %>%
mutate(across(contains("__"), ~ log(.x + 0.001))) %>%
mutate(across(contains("__"), ~ scales::rescale(.x))) # {scales}
max(otu.qp.csv) == 1 # should be TRUE
# otu.qp.csv[1:10, 1:5]
# convert to presence/absence data
otu.pa.csv <- otu.ab.csv
otu.pa.csv[otu.pa.csv > 0] <- 1
min(colSums(otu.pa.csv)) == minocc # should be TRUE
Y.train.pa <- otu.pa.csv
Y.train.qp <- otu.qp.csv
# env covariates
# otuenv %>%
#   dplyr::select(!contains("__"), -UTM_E, -UTM_N, -starts_with("nor")) %>%
#   names(.)
#  [1] "SiteName"           "trap"               "period"
env.vars <- otuenv %>%
dplyr::select(!contains("__"), -UTM_E, -UTM_N, -starts_with("nor")) %>%
mutate(uniqueID = paste(SiteName, trap, period, sep = "_"),
elevation_m = elevation_m * 0.3048, ## convert to metres???
B1_median = apply(across(starts_with("B1_")), 1, median),
B2_median = apply(across(starts_with("B2_")), 1, median),
B3_median = apply(across(starts_with("B3_")), 1, median),
B4_median = apply(across(starts_with("B4_")), 1, median),
B5_median = apply(across(starts_with("B5_")), 1, median),
B6_median = apply(across(starts_with("B6_")), 1, median),
B7_median = apply(across(starts_with("B7_")), 1, median),
B10_median = apply(across(starts_with("B10_")), 1, median),
B11_median = apply(across(starts_with("B11_")), 1, median),
lg_DistStream = log(distToStream_m + 0.001),
lg_DistRoad = log(distToRoad_m + 0.001),
lg_YrsDisturb = log(YrsSinceDist + 0.001),
lg_cover2m_max = log(l_Cover_2m_max + 0.001),
lg_cover2m_4m = log(l_Cover_2m_4m + 0.001),
lg_cover4m_16m = log(l_Cover_4m_16m + 0.001)) %>%
dplyr::select(uniqueID, clearcut,insideHJA,oldGrowthIndex, elevation_m, canopyHeight_m, precipitation_mm, minT_annual, maxT_annual, mean.NDVI, mean.EVI, mean.green, mean.wet, mean.bright, l_p25, l_rumple, B1_median, B2_median,B3_median,B4_median,B5_median,B6_median,B7_median,B10_median,B11_median,lg_DistStream, lg_DistRoad, lg_YrsDisturb, lg_cover2m_max, lg_cover2m_4m, lg_cover4m_16m) %>%
dplyr::left_join(y = dem_stats[,c("uniqueID", "dem500", "tri.pt")], by = "uniqueID") %>%
mutate(across(where(is.numeric), scale), # scale here
clearcut = factor(clearcut),
insideHJA = factor(insideHJA)) %>%
dplyr::select(-uniqueID)
str(env.vars)
X.train <- env.vars
## Study design data
S.train <- otuenv %>%
dplyr::select(SiteName,trap,period, UTM_E, UTM_N) %>%
mutate(uniqueID = paste(SiteName, trap, period, sep = "_"))
head(S.train)
spp <- data.frame(species = colnames(Y.train.pa)) %>%
tidyr::separate(col = species, into = c("OTU", "empty", "class", "order", "family",
"genus", "epithet", "BOLD", "BOLDID",
"size"),
remove = FALSE, sep = "_") %>%
select(-empty)
data.frame(species = colnames(Y.train.pa))
spp <- data.frame(species = colnames(Y.train.pa)) %>%
tidyr::separate(col = species, into = c("OTU", "empty", "class", "order", "family",
"genus", "epithet", "BOLD", "BOLDID",
"size"),
remove = FALSE, sep = "_") %>%
dplyr::select(-empty)
head(spp)
for(c in seq_along(spp)[-1]) spp[,c] <- sub("NA", NA, spp[,c])
# Add dummy family and genus
spp$family[is.na(spp$family)] <- sprintf("fam%03d", 1:sum((is.na(spp$family))))
spp$genus[is.na(spp$genus)] <- sprintf("gen%03d", 1:sum((is.na(spp$genus))))
head(spp)
# convert to factors for ape
spp <- spp[order(spp$class, spp$order, spp$family, spp$genus),]
tax.cols <- c("class", "order", "family", "genus", "epithet", "species")
for(i in tax.cols) spp[,i] <- factor(spp[,i])
head(spp)
P <- ape::as.phylo(~class/order/family/genus/species, data = spp, collapse = F)
P$edge.length = rep(1, length(P$edge)) # make all lengths eqaul between tax levels
ape::is.rooted(P)
all(P$tip.label %in% colnames(Y.train.pa))
all(P$tip.label %in% colnames(Y.train.qp))
rm(c, datFile, gitHub, i, kelpierundate, minimaprundate, minocc, outputidxstatstabulatefolder, period, primer, samtoolsfilter, samtoolsqual, tax.cols, trap)
rm(dem_stats, spp)
rm(otu.ab.csv, otuenv)
source("Hmsc_CD/local/L1_read_data.r")
rm(Y.train.pa, Y.train.qp, P)
head(S.train)
xy.sf <- st_as_sf(S.train, coords = c("UTM_E", "UTM_N"), crs = 32610)
terr <- brick("J:/UEA/Oregon/gis/r_nad/terrain.tif")
terr
nad83 <- 4269
utm10N <- 32610
xy.sf <- st_as_sf(S.train, coords = c("UTM_E", "UTM_N"), crs = utm10N)
xy.nad <- st_transform(xy.sf, crs = nad83)
plot(terr)
dem.pts <- raster::extract(terr, xy.nad)
head(dem.pts)
names(terr) <- c("dem", "tri")
plot(terr)
dem.pts <- raster::extract(terr, xy.nad)
head(dem.pts)
dem.500m <- raster::extract(terr, xy.nad, buffer = 500, fun = mean) # units in m for unprojected data
head(dem.500m)
xy.nad$dem.pt <- dem.pts[,"dem"]
xy.nad.dem500 <- dem.500m[,"dem"]
xy.nad$dem500 <- dem.500m[,"dem"]
xy.nad$diffDem <- xy.nad$dem500 - xy.nad$dem.pt
hist(xy.nad$dem.pt)
hist(xy.nad$diffDem)
mapview::mapview(xy.nad, zcol = "diffDem",
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT", "Thunderforest.Outdoors"),
legend = T)
xy.nad$diffDem <- abs(xy.nad$dem500 - xy.nad$dem.pt)
rm(xy.nad.dem500)
mapview::mapview(xy.nad, zcol = "diffDem", layer.name = "Abs diff pt vs 500m DEM",
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = T)
head(dem.pts)
colnames(dem.pts) <- c("dem.pt", "tri.pt")
head(dem.pts)
xy.sf <- st_as_sf(S.train, coords = c("UTM_E", "UTM_N"), crs = utm10N)
xy.nad <- st_transform(xy.sf, crs = nad83)
xy.nad <- cbind(xy.nad, dem.pts)
xy.nad
head(dem.500m)
xy.nad$dem500 <- dem.500m[,"dem"]
xy.nad$diffDem <- abs(xy.nad$dem500 - xy.nad$dem.pt)
plot(xy.nad$tri.pt, xy.nad$diffDem)
hist(xy.nad$dem.pt)
hist(xy.nad$diffDem)
mapview::mapview(xy.nad, zcol = c("diffDem", "tri.pt"),
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = T)
mv <- mapview::mapview(xy.nad, zcol = c("diffDem", "tri.pt"),
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = T)
mapview::mapshot(mv, file = "Hmsc_CD/local/plots/dem_map.html")
mv2 <- mapview::mapview(xy.nad, zcol = c("diffDem"),
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = T)
mv2 <- mapview::mapview(xy.nad, zcol = c("diffDem"),
map.types = c("Esri.WorldImagery"),
legend = T)
mapview::mapshot(mv2, file = "Hmsc_CD/local/plots/dem_map.PNG")
wd <- here::here()
wd
setwd(wd)
dir()
library(sf)
library(raster)
# EPSG:32610 # WGS 84 / UTM zone 10N
utm10N <- 32610
# EPSG:4269 # NAD 83
nad83 <- 4269
# import site data
# (follows quantiles of prevalence - as in models of 20201209 - see S2_define_models.r)
# get data
source("Hmsc_CD/local/L1_read_data.r")
rm(Y.train.pa, Y.train.qp, P)
head(S.train)
xy.sf <- st_as_sf(S.train, coords = c("UTM_E", "UTM_N"), crs = utm10N)
# transform to NAD (for now, quicker than projecting raster)
xy.nad <- st_transform(xy.sf, crs = nad83)
# import raster elevation data
terr <- brick("J:/UEA/Oregon/gis/r_nad/terrain.tif")
terr
names(terr) <- c("dem", "tri")
plot(terr)
# extract point elevation data
dem.pts <- raster::extract(terr, xy.nad)
colnames(dem.pts) <- c("dem.pt", "tri.pt")
head(dem.pts)
dem.500m <- raster::extract(terr, xy.nad, buffer = 500, fun = mean) # units in m for unprojected data
head(dem.500m)
# add elevation data per point to xy
xy.nad <- cbind(xy.nad, dem.pts)
xy.nad$dem500 <- dem.500m[,"dem"]
xy.nad$diffDem <- abs(xy.nad$dem500 - xy.nad$dem.pt)
plot(xy.nad$tri.pt, xy.nad$diffDem)
xy.nad
hist(xy.nad$dem.pt)
hist(xy.nad$diffDem)
library(mapview)
mv <- mapview(xy.nad, zcol = c("diffDem", "tri.pt"),
map.types = c("Esri.WorldImagery", "OpenStreetMap.HOT"),
legend = T)
mv
mapshot(mv, file = "Hmsc_CD/local/plots/dem_map.html")
library(leafpop)
mapshot(mv, file = "Hmsc_CD/local/plots/dem_map.html")
mapshot(mv, file = "Hmsc_CD/local/plots/dem_map.html", selfcontainted = TRUE)
save(xy.nad, file = "Hmsc_CD/local/xy_nad.rdata")
